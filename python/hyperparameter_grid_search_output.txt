============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.351388888889
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.355714285714
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.402857142857
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.597222222222
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.484285714286
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.45
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.383333333333
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.394285714286
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.408571428571
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.561111111111
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.538571428571
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.468571428571
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.409722222222
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.417142857143
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.44
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.519444444444
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.5
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.414285714286
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.401388888889
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.405714285714
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.484285714286
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.5375
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.471428571429
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.465714285714
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.455555555556
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.454285714286
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.49
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.540277777778
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.515714285714
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.472857142857
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.408333333333
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.424285714286
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.5
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.55
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.522857142857
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.43
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.351388888889
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.355714285714
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.402857142857
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.597222222222
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.484285714286
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.45
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.383333333333
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.394285714286
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.408571428571
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.561111111111
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.538571428571
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.468571428571
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.409722222222
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.417142857143
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.44
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.519444444444
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.5
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.414285714286
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.401388888889
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.405714285714
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.484285714286
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.5375
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.471428571429
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.465714285714
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.455555555556
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.454285714286
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.49
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.540277777778
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.515714285714
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.472857142857
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.408333333333
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.424285714286
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.5
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.55
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.522857142857
============================================================{'number of convpool layers': 1, 'filter size': (5, 5), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 50, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 50, 100), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.43
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.372222222222
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.375714285714
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.384285714286
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.5375
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.421428571429
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.4
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.358333333333
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.38
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.377142857143
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.473611111111
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.442857142857
============================================================{'number of convpool layers': 1, 'filter size': (3, 3), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.428571428571
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.406944444444
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.415714285714
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.431428571429
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.5
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.425714285714
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 1, 'improvement threshold': 0.995, 'learning rate': 0.1, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.42
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 30, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.3875
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 50, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
best validation loss: 0.412857142857
============================================================{'number of convpool layers': 1, 'filter size': (4, 4), 'number of hidden layers': 2, 'improvement threshold': 0.995, 'learning rate': 0.01, 'number of hidden units': 100, 'number of epochs': 100, 'patience': 10000, 'convpool layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'batch size': 100, 'pool size': (2, 2), 'number of kernels': (20, 30, 40), 'patience increase': 2, 'hidden layer activation function': <theano.tensor.elemwise.Elemwise object at 0x7f76c3dfd3d0>, 'learning rate decay': None}
